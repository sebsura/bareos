#!/bin/bash
set -e
set -o pipefail
set -u

TestName=01-setup

JobName=backup-bareos-fd

#shellcheck source=../environment.in
. ./environment

#shellcheck source=../scripts/functions
. "${rscripts}"/functions

# Fill ${BackupDirectory} with data.
setup_data

# Count number of directories to be stripped to fully
# strip away $BackupDirectory prefix
strip_count="${BackupDirectory//[!\/]}"
strip_count="${#strip_count}"

# Clear additional configs
rm -f  "${config_directory_dir_additional_test_config}"/*

# Create fileset and job with strip path setting
cat <<END_OF_DATA > "$config_directory_dir_additional_test_config/strippath-fileset-job.conf"
FileSet {
  Name = "SelfTestStripPath"
  Description = "fileset just to backup some files for selftest"
  Include {
    Options {
      Signature = XXH128
	  HardLinks = Yes
	  Strip Path = $strip_count
    }
    File = "${BackupDirectory}"
  }
}
Job {
  Name = "backup-bareos-fd"
  JobDefs = "DefaultJob"
  Client = "bareos-fd"
  FileSet = "SelfTestStripPath"
}
END_OF_DATA

start_test

cat <<END_OF_DATA >"$tmp/bconcmds"
@$out /dev/null
messages
@$out $tmp/reload.out
reload
messages
@$out $tmp/backup.out
label volume=TestVolume001 storage=File pool=Full
run job=$JobName yes
wait
update volume=TestVolume001 volstatus=Used
messages
quit
END_OF_DATA

run_bareos "$@"

check_for_zombie_jobs storage=File

expect_grep 'Catalog record for Volume "TestVolume001", Slot 0 successfully created.' \
	    "$tmp/backup.out" \
	    "TestVolume001 was not created." 

expect_grep 'Termination:.*Backup OK' \
	    "$tmp/backup.out" \
	    "Backup did not succeed."

end_test
