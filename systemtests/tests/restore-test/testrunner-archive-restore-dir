#!/bin/bash
set -e
set -o pipefail
set -u
#
# restore some a directory from archives
#
TestName="$(basename "$(pwd)")"
export TestName

JobName=backup-bareos-fd

#shellcheck source=../environment.in
. ./environment

#shellcheck source=../scripts/functions
. "${rscripts}"/functions

start_test

dir="$(pwd)/tmp/data/build/src/tests"
if [[ -d "$tmp/bareos-restores/$dir" ]]; then
    rm -r "$tmp/bareos-restores/$dir"
fi
cat <<END_OF_DATA >"$tmp/bconcmds"
@$out /dev/null
setdebug level=100 storage=File
@$out /tmp/log1.out
status director
status client
status storage=File
@$out $tmp/jobs.out
list jobs
@$out $tmp/restore-dir-from-archive.out
update jobid=1 jobtype=A
restore archive
11
1
$dir

yes
wait
update jobid=1 jobtype=B
messages
quit
END_OF_DATA

run_bconsole
check_for_zombie_jobs storage=File

# check the most current jobs list form $tmp/jobs.out and check that it is
# indeed a backup
if ! grep "1 | backup-bareos-fd" "$tmp/jobs.out" | tail -n 1 | grep "| B" > /dev/null; then
    echo "Job 1 has to always be a backup job at the start of a test."
    exit 5
fi

expect_grep "Start Restore Job" \
	    "$tmp/restore-dir-from-archive.out" \
	    "The restore job was not started."

check_restore_diff "$dir"
end_test
