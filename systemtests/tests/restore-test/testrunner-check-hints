#!/bin/bash
set -e
set -o pipefail
set -u
#
# Check wether hints are issued when trying to restore
# backups, but none of the right type exist.
# (i.e. an archive exists, but a non-archive is wanted.)
#

TestName="$(basename "$(pwd)")"
export TestName

JobName=backup-bareos-fd

#shellcheck source=../environment.in
. ./environment

#shellcheck source=../scripts/functions
. "${rscripts}"/functions

start_test

cat <<END_OF_DATA >"$tmp/bconcmds"
@$out /dev/null
messages
@$out $tmp/setup.out
setdebug level=100 storage=File
status director
status client
status storage=File
wait
messages
@$out $tmp/jobs.out
list jobs
@$out $tmp/should-hint-non-archive.out
restore archive client=bareos-fd fileset=SelfTest where=$tmp/bareos-restores select all done yes
wait
messages
@$out $tmp/should-hint-archive.out
update jobid=1 jobtype=A
restore client=bareos-fd fileset=SelfTest where=$tmp/bareos-restores select all done yes
wait
messages
update jobid=1 jobtype=B
quit
END_OF_DATA

run_bconsole
check_for_zombie_jobs storage=File

# check the most current jobs list form $tmp/jobs.out and check that it is
# indeed a backup
if ! grep "1 | backup-bareos-fd" "$tmp/jobs.out" | tail -n 1 | grep "| B" > /dev/null; then
    echo "Job 1 has to always be a backup job at the start of a test."
    exit 5
fi

expect_grep "Try" \
	    "$tmp/should-hint-non-archive.out" \
	    "Expected hint to restore from archive not issued."

expect_grep "No Full backup" \
	    "$tmp/should-hint-non-archive.out" \
	    "Restore should not be able to restore archives."

expect_not_grep "full backup archive" \
		"$tmp/should-hint-non-archive.out" \
		"Did not display correct 'restore' hint."

expect_grep "Try" \
	    "$tmp/should-hint-archive.out" \
	    "Expected hint to restore from archive not issued."

expect_grep "No Full backup" \
	    "$tmp/should-hint-archive.out" \
	    "Restore should not be able to restore archives."

expect_grep "full backup archive" \
	    "$tmp/should-hint-archive.out" \
	    "Did not display correct 'restore archive' hint."

check_restore_diff "${BackupDirectory}"
end_test
