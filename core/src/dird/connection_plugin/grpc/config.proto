/*
 * LICENSE HERE
 */

syntax = "proto3";

package bareos.config;

import "google/protobuf/struct.proto";

service Config {
  rpc Schema (SchemaRequest) returns (SchemaResponse);
  rpc Modify (ModifyRequest) returns (ModifyResponse);

  rpc ListClients (ListClientsRequest) returns (ListClientsResponse);
  rpc ListJobs (ListJobsRequest) returns (ListJobsResponse);
  rpc ListCatalogs (ListCatalogsRequest) returns (ListCatalogsResponse);
};

enum ResourceType {
  RESOURCE_TYPE_UNSPECIFIED = 0;
  DIRECTOR = 1;
  CLIENT = 2;
  JOBDEFS = 3;
  JOB = 4;
  STORAGE = 5;
  CATALOG = 6;
  SCHEDULE = 7;
  FILESET = 8;
  POOL = 9;
  MSGS = 10;
  COUNTER = 11;
  PROFILE = 12;
  CONSOLE = 13;
  USER = 14;
  GRPC = 15;
};

message SchemaRequest {
  ResourceType type = 1;
};

enum ConfigType {
  CONFIG_TYPE_UNSPECIFIED = 0;
  STRING = 1;
  ENUM = 2;
  BOOL = 3;
  POS_INT = 4; // excluding 0
  NAT_INT = 5; // including 0
};

message SchemaValue {
  ConfigType type = 1;
  string name = 5;
  optional string description = 2;
  optional string default_value = 3;
  bool is_required = 4;
  bool is_deprecated = 6;
  bool multiple = 8;

  repeated string values = 7;
};

message SchemaResponse {
  repeated SchemaValue schema = 1;
};

message ModifyRequest {
  ConfigType type = 1;
  google.protobuf.Struct content = 2;
  bool overwrite = 3;
};

message ModifyResponse {
  bool ok = 1;
};

message ListClientsRequest {
};

message ClientId {
  string name = 1;
};
message Client {
  ClientId id = 1;
  string name = 2;
  string address = 3;
};

message ListClientsResponse {
  repeated Client clients = 1;
};

enum JobType {
  JOB_TYPE_UNSPECIFIED = 0;
  RESTORE = 1;
  BACKUP = 2;
  COPY = 3;
  VERIFY = 4;
  ADMIN = 5;
  ARCHIVE = 6;
  MIGRATE = 7;
  CONSOLIDATE = 8;
};

enum JobLevel {
  JOB_LEVEL_UNSPECIFIED = 0;
  FULL = 1;
  DIFFERENTIAL = 2;
  INCREMENTAL = 3;
};

message JobId {
  string name = 1;
};

message Job {
  JobId id = 1;
  string name = 2;
  JobType type = 3;
  optional JobLevel default_level = 4;
};

message JobTypeFilter {
  JobType select = 1;
};

message JobFilter {
  oneof filter_type {
    JobTypeFilter type = 1;
  }
};

message ListJobsRequest {
  // if no filter is set, then all jobs are accepted,
  // otherwise only jobs are accepted that match all
  // of the supplied filters
  repeated JobFilter filters = 1;
};

message ListJobsResponse {
  repeated Job jobs = 1;
};

message CatalogId {
  string name = 1;
};
message Catalog {
  CatalogId id = 1;
  string name = 2;
  string dbname = 3;
};

message ListCatalogsRequest {
};

message ListCatalogsResponse {
  repeated Catalog catalogs = 1;
};
